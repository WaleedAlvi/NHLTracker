[{"G:\\Personal Projects\\NHLScoreTracker\\nhl-score-tracker\\src\\index.tsx":"1","G:\\Personal Projects\\NHLScoreTracker\\nhl-score-tracker\\src\\reportWebVitals.ts":"2","G:\\Personal Projects\\NHLScoreTracker\\nhl-score-tracker\\src\\app\\layouts\\App.tsx":"3","G:\\Personal Projects\\NHLScoreTracker\\nhl-score-tracker\\src\\app\\api\\agent.ts":"4","G:\\Personal Projects\\NHLScoreTracker\\nhl-score-tracker\\src\\app\\api\\teams.ts":"5","G:\\Personal Projects\\NHLScoreTracker\\nhl-score-tracker\\src\\features\\teams\\teamDashboard.tsx":"6","G:\\Personal Projects\\NHLScoreTracker\\nhl-score-tracker\\src\\features\\nav\\NavBar.tsx":"7","G:\\Personal Projects\\NHLScoreTracker\\nhl-score-tracker\\src\\features\\headtohead\\HeadToHead.tsx":"8","G:\\Personal Projects\\NHLScoreTracker\\nhl-score-tracker\\src\\app\\shared\\calculateTotal.ts":"9","G:\\Personal Projects\\NHLScoreTracker\\nhl-score-tracker\\src\\app\\shared\\enums.ts":"10","G:\\Personal Projects\\NHLScoreTracker\\nhl-score-tracker\\src\\features\\teams\\TeamDetail.tsx":"11","G:\\Personal Projects\\NHLScoreTracker\\nhl-score-tracker\\src\\features\\headtohead\\HeadToHeadCategory.tsx":"12","G:\\Personal Projects\\NHLScoreTracker\\nhl-score-tracker\\src\\features\\headtohead\\ProgressBar.tsx":"13","G:\\Personal Projects\\NHLScoreTracker\\nhl-score-tracker\\src\\features\\Home\\HomePage.tsx":"14","G:\\Personal Projects\\NHLScoreTracker\\nhl-score-tracker\\src\\features\\scores\\GameSchedule.tsx":"15","G:\\Personal Projects\\NHLScoreTracker\\nhl-score-tracker\\src\\features\\scores\\GamesByDate.tsx":"16","G:\\Personal Projects\\NHLScoreTracker\\nhl-score-tracker\\src\\features\\scores\\GameScore.tsx":"17","G:\\Personal Projects\\NHLScoreTracker\\nhl-score-tracker\\src\\app\\stores\\datesStore.ts":"18","G:\\Personal Projects\\NHLScoreTracker\\nhl-score-tracker\\src\\app\\stores\\teamsStore.ts":"19","G:\\Personal Projects\\NHLScoreTracker\\nhl-score-tracker\\src\\app\\shared\\common.ts":"20"},{"size":631,"mtime":1612446901092,"results":"21","hashOfConfig":"22"},{"size":425,"mtime":499162500000,"results":"23","hashOfConfig":"22"},{"size":1678,"mtime":1612561936850,"results":"24","hashOfConfig":"22"},{"size":1406,"mtime":1612555862369,"results":"25","hashOfConfig":"22"},{"size":410,"mtime":1612555908287,"results":"26","hashOfConfig":"22"},{"size":4044,"mtime":1614718828559,"results":"27","hashOfConfig":"22"},{"size":823,"mtime":1612554016224,"results":"28","hashOfConfig":"22"},{"size":2023,"mtime":1612553875344,"results":"29","hashOfConfig":"22"},{"size":2141,"mtime":1612562021601,"results":"30","hashOfConfig":"22"},{"size":103,"mtime":1611805909495,"results":"31","hashOfConfig":"22"},{"size":1091,"mtime":1612562517185,"results":"32","hashOfConfig":"22"},{"size":2471,"mtime":1612553863311,"results":"33","hashOfConfig":"22"},{"size":2129,"mtime":1612553837103,"results":"34","hashOfConfig":"22"},{"size":299,"mtime":1612553967224,"results":"35","hashOfConfig":"22"},{"size":457,"mtime":1612554202902,"results":"36","hashOfConfig":"22"},{"size":372,"mtime":1612554223592,"results":"37","hashOfConfig":"22"},{"size":141,"mtime":1612238883545,"results":"38","hashOfConfig":"22"},{"size":846,"mtime":1614719120688,"results":"39","hashOfConfig":"22"},{"size":2382,"mtime":1614702522002,"results":"40","hashOfConfig":"22"},{"size":519,"mtime":1612495323727,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"5ruskn",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"44"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"44"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"83"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"G:\\Personal Projects\\NHLScoreTracker\\nhl-score-tracker\\src\\index.tsx",[],["90","91"],"G:\\Personal Projects\\NHLScoreTracker\\nhl-score-tracker\\src\\reportWebVitals.ts",[],"G:\\Personal Projects\\NHLScoreTracker\\nhl-score-tracker\\src\\app\\layouts\\App.tsx",[],"G:\\Personal Projects\\NHLScoreTracker\\nhl-score-tracker\\src\\app\\api\\agent.ts",["92"],"import axios, { AxiosResponse } from 'axios';\r\n\r\naxios.defaults.baseURL = 'https://statsapi.web.nhl.com/api/v1';\r\n\r\nconst responseBody = (response: AxiosResponse) => response.data;\r\n\r\nconst request = {\r\n    get: (url: string) => axios.get(url).then(responseBody),\r\n    post: (url: string, body: {}) => axios.post(url, body).then(responseBody),\r\n    put: (url: string, body: {}) => axios.put(url, body).then(responseBody),\r\n    delete: (url: string) => axios.delete(url).then(responseBody),\r\n}\r\n\r\nconst TeamDetail = (teamID: number) => {\r\n    return request.get(`/teams/${teamID.toString()}/stats`);\r\n}\r\n\r\nconst Teams = (teamIDs: number[]) => {\r\n    return request.get(`/teams/?teamId=${teamIDs.join()}&expand=team.stats`);\r\n}\r\n\r\nconst TeamGames = (teamID: number[], startDate: Date, endDate: Date) =>{\r\n\r\n    const startDateString: string = `&startDate=${startDate.toISOString().split('T')[0]}`;\r\n    const endDateString: string = `&endDate=${endDate.toISOString().split('T')[0]}`;\r\n    let teamIDString: string = '';\r\n\r\n    teamID.map((teamID: number, i: number) => {\r\n        return teamIDString += i === 0 ? `teamId=${teamID}` : `&teamId=${teamID}`;\r\n    })\r\n    console.log(`/schedule?${teamIDString}${startDateString}${endDateString}`);\r\n    return request.get(`/schedule?${teamIDString}${startDateString}${endDateString}`);\r\n}\r\n\r\nexport default {\r\n    TeamDetail,\r\n    Teams,\r\n    TeamGames,\r\n}\r\n\r\n\r\n","G:\\Personal Projects\\NHLScoreTracker\\nhl-score-tracker\\src\\app\\api\\teams.ts",["93"],"\r\nconst tamptaBayID: number = 14;\r\nconst coloradoID: number = 21;\r\nconst bostonID: number = 6;\r\nconst edmontonID: number = 22;\r\nconst carolinaID: number = 12;\r\nconst vegasID: number = 54;\r\nconst pittsburghID: number = 5;\r\nconst winnipegID: number = 52;\r\n\r\nexport default {\r\n    tamptaBayID,\r\n    coloradoID,\r\n    bostonID,\r\n    edmontonID,\r\n    carolinaID,\r\n    vegasID,\r\n    pittsburghID,\r\n    winnipegID\r\n}\r\n","G:\\Personal Projects\\NHLScoreTracker\\nhl-score-tracker\\src\\features\\teams\\teamDashboard.tsx",["94","95"],"G:\\Personal Projects\\NHLScoreTracker\\nhl-score-tracker\\src\\features\\nav\\NavBar.tsx",[],"G:\\Personal Projects\\NHLScoreTracker\\nhl-score-tracker\\src\\features\\headtohead\\HeadToHead.tsx",[],"G:\\Personal Projects\\NHLScoreTracker\\nhl-score-tracker\\src\\app\\shared\\calculateTotal.ts",["96","97","98","99","100","101","102"],"import { ITeam } from \"../models/team\";\r\nimport { teamCategory } from \"./enums\";\r\n\r\nexport default {}\r\nconst CalcuateTotalGamesPlayed = (teams: ITeam[]) => {\r\n  let total: number = 0;\r\n  teams.map((team) => {\r\n    total += team.gamesPlayed;\r\n  })\r\n  return total;\r\n  };\r\n  \r\n  const CalcuateTotalWins = (teams: ITeam[]) => {\r\n    let total: number = 0;\r\n    teams.map((team) => {\r\n    total += team.wins;\r\n  })\r\n  return total;\r\n  };\r\n  \r\n  const CalcuateTotalLoses = (teams: ITeam[]) => {\r\n    let total: number = 0;\r\n    teams.map((team) => {\r\n    total += team.losses;\r\n  })\r\n  return total;\r\n  };\r\n  \r\n  const CalcuateTotalOTLoses = (teams: ITeam[]) => {\r\n    let total: number = 0;\r\n    teams.map((team) => {\r\n    total += team.overTimeLoses;\r\n  })\r\n  return total;\r\n  };\r\n  \r\n  const CalcuateTotalPoints = (teams: ITeam[]) => {\r\n    let total: number = 0;\r\n    teams.map((team) => {\r\n    total += team.points;\r\n  })\r\n  return total;\r\n  };\r\n\r\n  const CalculateWinPercentage = (teams: ITeam[]) => {\r\n    const totalWins: number = CalcuateTotalWins(teams);\r\n    const totalGamesPlayed: number = CalcuateTotalWins(teams);\r\n    return totalWins/totalGamesPlayed;\r\n  }\r\n\r\n  const SelectCalculation = (category: teamCategory, teams: ITeam[]) =>{\r\n    let total: number = 0;\r\n    switch (category) {\r\n      case teamCategory.gamesPlayed: {\r\n        total = CalcuateTotalGamesPlayed(teams);\r\n        break;\r\n      }\r\n      case teamCategory.wins: {\r\n        total = CalcuateTotalWins(teams);\r\n        break;\r\n      }\r\n      case teamCategory.losses: {\r\n        total = CalcuateTotalLoses(teams);\r\n        break;\r\n      }\r\n      case teamCategory.overTimeLoses: {\r\n        total = CalcuateTotalOTLoses(teams);\r\n        break;\r\n      }\r\n      case teamCategory.points: {\r\n        total = CalcuateTotalPoints(teams);\r\n        break;\r\n      }\r\n      \r\n    }\r\n    return total;\r\n  }\r\n\r\n  export {\r\n    CalcuateTotalGamesPlayed as TotalGamesPlayed, \r\n    CalcuateTotalWins as TotalWins, \r\n    CalcuateTotalLoses as TotalLoses, \r\n    CalcuateTotalOTLoses as TotalOTLoses, \r\n    CalcuateTotalPoints as TotalPoints,\r\n    SelectCalculation\r\n  }\r\n\r\n\r\n    ","G:\\Personal Projects\\NHLScoreTracker\\nhl-score-tracker\\src\\app\\shared\\enums.ts",[],"G:\\Personal Projects\\NHLScoreTracker\\nhl-score-tracker\\src\\features\\teams\\TeamDetail.tsx",["103"],"import React from 'react';\r\nimport { Image, Table } from 'semantic-ui-react';\r\nimport { ITeam } from '../../app/models/team';\r\nimport { observer } from 'mobx-react-lite';\r\n\r\ninterface IProps {\r\n  teams: ITeam[];\r\n}\r\n\r\nconst TeamDetail: React.FC<IProps> = ({ teams }) => {\r\n  return (\r\n    <Table.Body>\r\n      {teams.map((team) => {\r\n        if (team.name !== '')\r\n          return (\r\n            <Table.Row key={team.name} textAlign=\"center\">\r\n              <Table.Cell>\r\n                <Image verticalAlign=\"middle\" src={team.logo} size=\"mini\" />\r\n              </Table.Cell>\r\n              <Table.Cell>\r\n                <a href={team.nhlURL}>{team.name}</a>\r\n              </Table.Cell>\r\n              <Table.Cell>{team.gamesPlayed}</Table.Cell>\r\n              <Table.Cell>{team.wins}</Table.Cell>\r\n              <Table.Cell>{team.losses}</Table.Cell>\r\n              <Table.Cell>{team.overTimeLoses}</Table.Cell>\r\n              <Table.Cell>{team.points}</Table.Cell>\r\n            </Table.Row>\r\n          );\r\n      })}\r\n    </Table.Body>\r\n  );\r\n};\r\n\r\nexport default observer(TeamDetail);\r\n","G:\\Personal Projects\\NHLScoreTracker\\nhl-score-tracker\\src\\features\\headtohead\\HeadToHeadCategory.tsx",[],"G:\\Personal Projects\\NHLScoreTracker\\nhl-score-tracker\\src\\features\\headtohead\\ProgressBar.tsx",[],"G:\\Personal Projects\\NHLScoreTracker\\nhl-score-tracker\\src\\features\\Home\\HomePage.tsx",[],"G:\\Personal Projects\\NHLScoreTracker\\nhl-score-tracker\\src\\features\\scores\\GameSchedule.tsx",[],"G:\\Personal Projects\\NHLScoreTracker\\nhl-score-tracker\\src\\features\\scores\\GamesByDate.tsx",["104","105"],"import React from 'react';\r\nimport { IGameStatus } from '../../app/models/gameStatus';\r\nimport GameScore from './GameScore';\r\nimport { observer } from 'mobx-react-lite';\r\n\r\ninterface IProps {\r\n  games: IGameStatus[];\r\n}\r\n\r\nconst GamesByDate: React.FC<IProps> = ({ games }) => {\r\n  return <div>{games.map((game) => {})}</div>;\r\n};\r\n\r\nexport default observer(GamesByDate);\r\n","G:\\Personal Projects\\NHLScoreTracker\\nhl-score-tracker\\src\\features\\scores\\GameScore.tsx",["106"],"import React from 'react';\r\nimport { IGames } from '../../app/models/games';\r\n\r\nexport const GameScore = () => {\r\n  return <div></div>;\r\n};\r\n",["107","108"],"G:\\Personal Projects\\NHLScoreTracker\\nhl-score-tracker\\src\\app\\stores\\datesStore.ts",[],"G:\\Personal Projects\\NHLScoreTracker\\nhl-score-tracker\\src\\app\\stores\\teamsStore.ts",[],"G:\\Personal Projects\\NHLScoreTracker\\nhl-score-tracker\\src\\app\\shared\\common.ts",[],{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","severity":1,"message":"114","line":35,"column":1,"nodeType":"115","endLine":39,"endColumn":2},{"ruleId":"113","severity":1,"message":"114","line":11,"column":1,"nodeType":"115","endLine":20,"endColumn":2},{"ruleId":"116","severity":1,"message":"117","line":29,"column":22,"nodeType":"118","messageId":"119","endLine":29,"endColumn":24},{"ruleId":"120","severity":1,"message":"121","line":39,"column":6,"nodeType":"122","endLine":39,"endColumn":48,"suggestions":"123"},{"ruleId":"113","severity":1,"message":"114","line":4,"column":1,"nodeType":"115","endLine":4,"endColumn":18},{"ruleId":"116","severity":1,"message":"117","line":7,"column":20,"nodeType":"118","messageId":"119","endLine":7,"endColumn":22},{"ruleId":"116","severity":1,"message":"117","line":15,"column":22,"nodeType":"118","messageId":"119","endLine":15,"endColumn":24},{"ruleId":"116","severity":1,"message":"117","line":23,"column":22,"nodeType":"118","messageId":"119","endLine":23,"endColumn":24},{"ruleId":"116","severity":1,"message":"117","line":31,"column":22,"nodeType":"118","messageId":"119","endLine":31,"endColumn":24},{"ruleId":"116","severity":1,"message":"117","line":39,"column":22,"nodeType":"118","messageId":"119","endLine":39,"endColumn":24},{"ruleId":"124","severity":1,"message":"125","line":45,"column":9,"nodeType":"126","messageId":"127","endLine":45,"endColumn":31},{"ruleId":"116","severity":1,"message":"128","line":13,"column":25,"nodeType":"118","messageId":"129","endLine":13,"endColumn":27},{"ruleId":"124","severity":1,"message":"130","line":3,"column":8,"nodeType":"126","messageId":"127","endLine":3,"endColumn":17},{"ruleId":"116","severity":1,"message":"117","line":11,"column":33,"nodeType":"118","messageId":"119","endLine":11,"endColumn":35},{"ruleId":"124","severity":1,"message":"131","line":2,"column":10,"nodeType":"126","messageId":"127","endLine":2,"endColumn":16},{"ruleId":"109","replacedBy":"132"},{"ruleId":"111","replacedBy":"133"},"no-native-reassign",["134"],"no-negated-in-lhs",["135"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'teamIds', 'teamSchedule', 'teams', and 'teamsStore'. Either include them or remove the dependency array.","ArrayExpression",["136"],"@typescript-eslint/no-unused-vars","'CalculateWinPercentage' is assigned a value but never used.","Identifier","unusedVar","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","'GameScore' is defined but never used.","'IGames' is defined but never used.",["134"],["135"],"no-global-assign","no-unsafe-negation",{"desc":"137","fix":"138"},"Update the dependencies array to be: [datesStore.startDate, datesStore.endDate, teams, teamsStore, teamSchedule, teamIds]",{"range":"139","text":"140"},[1330,1372],"[datesStore.startDate, datesStore.endDate, teams, teamsStore, teamSchedule, teamIds]"]