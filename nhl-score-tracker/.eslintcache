[{"G:\\Personal Projects\\NHLScoreTracker\\nhl-score-tracker\\src\\index.tsx":"1","G:\\Personal Projects\\NHLScoreTracker\\nhl-score-tracker\\src\\reportWebVitals.ts":"2","G:\\Personal Projects\\NHLScoreTracker\\nhl-score-tracker\\src\\app\\layouts\\App.tsx":"3","G:\\Personal Projects\\NHLScoreTracker\\nhl-score-tracker\\src\\app\\api\\agent.ts":"4","G:\\Personal Projects\\NHLScoreTracker\\nhl-score-tracker\\src\\app\\api\\teams.ts":"5","G:\\Personal Projects\\NHLScoreTracker\\nhl-score-tracker\\src\\features\\teams\\teamDashboard.tsx":"6","G:\\Personal Projects\\NHLScoreTracker\\nhl-score-tracker\\src\\features\\nav\\NavBar.tsx":"7","G:\\Personal Projects\\NHLScoreTracker\\nhl-score-tracker\\src\\features\\headtohead\\HeadToHead.tsx":"8","G:\\Personal Projects\\NHLScoreTracker\\nhl-score-tracker\\src\\app\\shared\\calculateTotal.ts":"9","G:\\Personal Projects\\NHLScoreTracker\\nhl-score-tracker\\src\\app\\shared\\enums.ts":"10","G:\\Personal Projects\\NHLScoreTracker\\nhl-score-tracker\\src\\features\\teams\\TeamDetail.tsx":"11","G:\\Personal Projects\\NHLScoreTracker\\nhl-score-tracker\\src\\features\\headtohead\\HeadToHeadCategory.tsx":"12","G:\\Personal Projects\\NHLScoreTracker\\nhl-score-tracker\\src\\features\\headtohead\\ProgressBar.tsx":"13","G:\\Personal Projects\\NHLScoreTracker\\nhl-score-tracker\\src\\features\\Home\\HomePage.tsx":"14","G:\\Personal Projects\\NHLScoreTracker\\nhl-score-tracker\\src\\features\\scores\\GameSchedule.tsx":"15","G:\\Personal Projects\\NHLScoreTracker\\nhl-score-tracker\\src\\features\\scores\\GamesByDate.tsx":"16","G:\\Personal Projects\\NHLScoreTracker\\nhl-score-tracker\\src\\features\\scores\\GameScore.tsx":"17"},{"size":631,"mtime":1612446901092,"results":"18","hashOfConfig":"19"},{"size":425,"mtime":499162500000,"results":"20","hashOfConfig":"19"},{"size":4040,"mtime":1612239420951,"results":"21","hashOfConfig":"19"},{"size":1320,"mtime":1612489313790,"results":"22","hashOfConfig":"19"},{"size":410,"mtime":1612131703739,"results":"23","hashOfConfig":"19"},{"size":4939,"mtime":1612490559153,"results":"24","hashOfConfig":"19"},{"size":782,"mtime":1612031273995,"results":"25","hashOfConfig":"19"},{"size":1949,"mtime":1611806208948,"results":"26","hashOfConfig":"19"},{"size":2141,"mtime":1611804392310,"results":"27","hashOfConfig":"19"},{"size":103,"mtime":1611805909495,"results":"28","hashOfConfig":"19"},{"size":1013,"mtime":1612202659497,"results":"29","hashOfConfig":"19"},{"size":2443,"mtime":1611805876542,"results":"30","hashOfConfig":"19"},{"size":2050,"mtime":1611754755588,"results":"31","hashOfConfig":"19"},{"size":223,"mtime":1612029904769,"results":"32","hashOfConfig":"19"},{"size":381,"mtime":1612451114375,"results":"33","hashOfConfig":"19"},{"size":297,"mtime":1612460715258,"results":"34","hashOfConfig":"19"},{"size":141,"mtime":1612238883545,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"5ruskn",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"38"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"38"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"79"},"G:\\Personal Projects\\NHLScoreTracker\\nhl-score-tracker\\src\\index.tsx",[],["80","81"],"G:\\Personal Projects\\NHLScoreTracker\\nhl-score-tracker\\src\\reportWebVitals.ts",[],"G:\\Personal Projects\\NHLScoreTracker\\nhl-score-tracker\\src\\app\\layouts\\App.tsx",["82","83"],"import React, { useState, useEffect } from 'react';\nimport { Container } from 'semantic-ui-react';\nimport { ITeam } from '../models/team';\nimport NavBar from '../../features/nav/NavBar';\nimport { TeamDashboard } from '../../features/teams/teamDashboard';\nimport agent from '../api/agent';\nimport teams from '../api/teams';\nimport { HeadToHead } from '../../features/headtohead/HeadToHead';\nimport { Route } from 'react-router-dom';\nimport { HomePage } from '../../features/Home/HomePage';\nimport { IGameStatus } from '../models/gameStatus';\nimport { IGames } from '../models/games';\n\nconst App = () => {\n  const [boysTeams, setBoysTeams] = useState<ITeam[]>([]);\n  useEffect(() => {\n    const boyTeamIDs: number[] = [\n      teams.vegasID,\n      teams.winnipegID,\n      teams.pittsburghID,\n      teams.carolinaID,\n    ];\n    agent.Teams(boyTeamIDs).then((response) => {\n      setBoysTeams(\n        response.teams.map((team: any) => {\n          return {\n            id: team.id,\n            name: team.name,\n            division: team.division.name,\n            gamesPlayed: team.teamStats[0].splits[0].stat.gamesPlayed,\n            wins: team.teamStats[0].splits[0].stat.wins,\n            losses: team.teamStats[0].splits[0].stat.losses,\n            overTimeLoses: team.teamStats[0].splits[0].stat.ot,\n            points: team.teamStats[0].splits[0].stat.pts,\n            nhlURL: team.officialSiteUrl,\n            logo: '',\n          };\n        })\n      );\n    });\n  }, []);\n\n  // const [boysSchedule, setBoysSchedule] = useState<IGames[]>([]);\n  // useEffect(() => {\n  //   agent\n  //     .TeamGames(\n  //       [teams.carolinaID, teams.pittsburghID, teams.vegasID, teams.winnipegID],\n  //       '2021-01-01',\n  //       '2021-01-31'\n  //     )\n  //     .then((response) => {\n  //       setBoysSchedule(\n  //         response.dates.map((date: any) => {\n  //           return {\n  //             date: date.date,\n  //             games: date.games.map((game: any) => {\n  //               return {\n  //                 date: game.gameDate,\n  //                 status: game.status.detailedState,\n  //                 homeTeam: {\n  //                   teamName: game.teams.home.team.name,\n  //                   score: game.teams.home.score,\n  //                 },\n  //                 awayTeam: {\n  //                   teamName: game.teams.away.team.name,\n  //                   score: game.teams.away.score,\n  //                 },\n  //               };\n  //             }),\n  //           };\n  //         })\n  //       );\n  //     });\n  // }, []);\n\n  const [girlsTeams, setGirlsTeams] = useState<ITeam[]>([]);\n  useEffect(() => {\n    const girlsTeamIDs: number[] = [\n      teams.bostonID,\n      teams.coloradoID,\n      teams.edmontonID,\n      teams.tamptaBayID,\n    ];\n    agent.Teams(girlsTeamIDs).then((response) => {\n      setGirlsTeams(\n        response.teams.map((team: any) => {\n          return {\n            id: team.id,\n            name: team.name,\n            division: team.division.name,\n            gamesPlayed: team.teamStats[0].splits[0].stat.gamesPlayed,\n            wins: team.teamStats[0].splits[0].stat.wins,\n            losses: team.teamStats[0].splits[0].stat.losses,\n            overTimeLoses: team.teamStats[0].splits[0].stat.ot,\n            points: team.teamStats[0].splits[0].stat.pts,\n            nhlURL: team.officialSiteUrl,\n            logo: '',\n          };\n        })\n      );\n    });\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <NavBar />\n\n      <Container style={{ marginTop: '7em' }}>\n        <Route exact path=\"/\" component={HomePage} />\n        <Route path=\"/boysdashboard\">\n          <TeamDashboard teams={boysTeams} teamName={'The Boys'} />\n        </Route>\n        <Route path=\"/girlsdashboard\" component={TeamDashboard}>\n          <TeamDashboard teams={girlsTeams} teamName={'The Girls'} />\n        </Route>\n        <Route path=\"/headtohead\">\n          <HeadToHead boysTeam={boysTeams} girlsTeam={girlsTeams} />\n        </Route>\n      </Container>\n    </div>\n  );\n};\n\nexport default App;\n","G:\\Personal Projects\\NHLScoreTracker\\nhl-score-tracker\\src\\app\\api\\agent.ts",["84","85"],"G:\\Personal Projects\\NHLScoreTracker\\nhl-score-tracker\\src\\app\\api\\teams.ts",["86"],"\r\nconst tamptaBayID: number = 14;\r\nconst coloradoID: number = 21;\r\nconst bostonID: number = 6;\r\nconst edmontonID: number = 22;\r\nconst carolinaID: number = 12;\r\nconst vegasID: number = 54;\r\nconst pittsburghID: number = 5;\r\nconst winnipegID: number = 52;\r\n\r\nexport default {\r\n    tamptaBayID,\r\n    coloradoID,\r\n    bostonID,\r\n    edmontonID,\r\n    carolinaID,\r\n    vegasID,\r\n    pittsburghID,\r\n    winnipegID\r\n}\r\n","G:\\Personal Projects\\NHLScoreTracker\\nhl-score-tracker\\src\\features\\teams\\teamDashboard.tsx",["87","88","89","90"],"G:\\Personal Projects\\NHLScoreTracker\\nhl-score-tracker\\src\\features\\nav\\NavBar.tsx",["91"],"import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Container, Input, Menu } from 'semantic-ui-react';\r\n\r\nexport const NavBar = () => {\r\n  return (\r\n    <div>\r\n      <Menu fixed=\"top\" inverted>\r\n        <Container>\r\n          <Menu.Item header as={NavLink} exact to=\"/\">\r\n            <img\r\n              src=\"/assets/nhl_logo.png\"\r\n              style={{ marginRight: '10 px' }}\r\n              alt=\"NHL Logo\"\r\n            />\r\n          </Menu.Item>\r\n          <Menu.Item name=\"Head to Head\" as={NavLink} to=\"/headtohead\" />\r\n          <Menu.Item name=\"Boys\" as={NavLink} to=\"/boysdashboard\" />\r\n          <Menu.Item name=\"Girls\" as={NavLink} to=\"/girlsdashboard\" />\r\n        </Container>\r\n      </Menu>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","G:\\Personal Projects\\NHLScoreTracker\\nhl-score-tracker\\src\\features\\headtohead\\HeadToHead.tsx",[],"G:\\Personal Projects\\NHLScoreTracker\\nhl-score-tracker\\src\\app\\shared\\calculateTotal.ts",["92","93","94","95","96","97","98"],"import { ITeam } from \"../models/team\";\r\nimport { teamCategory } from \"./enums\";\r\n\r\nexport default {}\r\nconst CalcuateTotalGamesPlayed = (teams: ITeam[]) => {\r\n  let total: number = 0;\r\n  teams.map((team) => {\r\n    total += team.gamesPlayed;\r\n  })\r\n  return total;\r\n  };\r\n  \r\n  const CalcuateTotalWins = (teams: ITeam[]) => {\r\n    let total: number = 0;\r\n    teams.map((team) => {\r\n    total += team.wins;\r\n  })\r\n  return total;\r\n  };\r\n  \r\n  const CalcuateTotalLoses = (teams: ITeam[]) => {\r\n    let total: number = 0;\r\n    teams.map((team) => {\r\n    total += team.losses;\r\n  })\r\n  return total;\r\n  };\r\n  \r\n  const CalcuateTotalOTLoses = (teams: ITeam[]) => {\r\n    let total: number = 0;\r\n    teams.map((team) => {\r\n    total += team.overTimeLoses;\r\n  })\r\n  return total;\r\n  };\r\n  \r\n  const CalcuateTotalPoints = (teams: ITeam[]) => {\r\n    let total: number = 0;\r\n    teams.map((team) => {\r\n    total += team.points;\r\n  })\r\n  return total;\r\n  };\r\n\r\n  const CalculateWinPercentage = (teams: ITeam[]) => {\r\n    const totalWins: number = CalcuateTotalWins(teams);\r\n    const totalGamesPlayed: number = CalcuateTotalWins(teams);\r\n    return totalWins/totalGamesPlayed;\r\n  }\r\n\r\n  const SelectCalculation = (category: teamCategory, teams: ITeam[]) =>{\r\n    let total: number = 0;\r\n    switch (category) {\r\n      case teamCategory.gamesPlayed: {\r\n        total = CalcuateTotalGamesPlayed(teams);\r\n        break;\r\n      }\r\n      case teamCategory.wins: {\r\n        total = CalcuateTotalWins(teams);\r\n        break;\r\n      }\r\n      case teamCategory.losses: {\r\n        total = CalcuateTotalLoses(teams);\r\n        break;\r\n      }\r\n      case teamCategory.overTimeLoses: {\r\n        total = CalcuateTotalOTLoses(teams);\r\n        break;\r\n      }\r\n      case teamCategory.points: {\r\n        total = CalcuateTotalPoints(teams);\r\n        break;\r\n      }\r\n      \r\n    }\r\n    return total;\r\n  }\r\n\r\n  export {\r\n    CalcuateTotalGamesPlayed as TotalGamesPlayed, \r\n    CalcuateTotalWins as TotalWins, \r\n    CalcuateTotalLoses as TotalLoses, \r\n    CalcuateTotalOTLoses as TotalOTLoses, \r\n    CalcuateTotalPoints as TotalPoints,\r\n    SelectCalculation\r\n  }\r\n\r\n\r\n    ","G:\\Personal Projects\\NHLScoreTracker\\nhl-score-tracker\\src\\app\\shared\\enums.ts",[],"G:\\Personal Projects\\NHLScoreTracker\\nhl-score-tracker\\src\\features\\teams\\TeamDetail.tsx",["99"],"import React from 'react';\r\nimport { Image, Table } from 'semantic-ui-react';\r\nimport { ITeam } from '../../app/models/team';\r\n\r\ninterface IProps {\r\n  teams: ITeam[];\r\n}\r\n\r\nexport const TeamDetail: React.FC<IProps> = ({ teams }) => {\r\n  return (\r\n    <Table.Body>\r\n      {teams.map((team) => {\r\n        if (team.name !== '')\r\n          return (\r\n            <Table.Row key={team.name} textAlign=\"center\">\r\n              <Table.Cell>\r\n                <Image verticalAlign=\"middle\" src={team.logo} size=\"tiny\" />\r\n              </Table.Cell>\r\n              <Table.Cell>\r\n                <a href={team.nhlURL}>{team.name}</a>\r\n              </Table.Cell>\r\n              <Table.Cell>{team.gamesPlayed}</Table.Cell>\r\n              <Table.Cell>{team.wins}</Table.Cell>\r\n              <Table.Cell>{team.losses}</Table.Cell>\r\n              <Table.Cell>{team.overTimeLoses}</Table.Cell>\r\n              <Table.Cell>{team.points}</Table.Cell>\r\n            </Table.Row>\r\n          );\r\n      })}\r\n    </Table.Body>\r\n  );\r\n};\r\n","G:\\Personal Projects\\NHLScoreTracker\\nhl-score-tracker\\src\\features\\headtohead\\HeadToHeadCategory.tsx",["100","101"],"import React from 'react';\r\nimport { ITeam } from '../../app/models/team';\r\nimport { teamCategory } from '../../app/shared/enums';\r\nimport { ProgressBar } from './ProgressBar';\r\nimport * as calculateStat from '../../app/shared/calculateTotal';\r\nimport { Header, Segment } from 'semantic-ui-react';\r\n\r\ninterface IProp {\r\n  boysTeam: ITeam[];\r\n  girlsTeam: ITeam[];\r\n  boysColour: string;\r\n  girlsColour: string;\r\n  category: teamCategory;\r\n}\r\n\r\nexport const HeadToHeadCategory: React.FC<IProp> = ({\r\n  boysTeam,\r\n  girlsTeam,\r\n  boysColour,\r\n  girlsColour,\r\n  category,\r\n}) => {\r\n  return (\r\n    <div style={{ marginTop: '30px', marginBottom: '30px' }}>\r\n      <div\r\n        style={{\r\n          display: 'flex',\r\n          justifyContent: 'space-between',\r\n          marginBottom: '8px',\r\n        }}\r\n      >\r\n        <div style={{ fontSize: '20px', fontWeight: 'bold' }}>\r\n          {calculateStat.SelectCalculation(category, boysTeam)}\r\n        </div>\r\n        <div style={{ fontSize: '20px', fontWeight: 'bold' }}>\r\n          {teamCategory[category]}\r\n        </div>\r\n        <div style={{ fontSize: '20px', fontWeight: 'bold' }}>\r\n          {calculateStat.SelectCalculation(category, girlsTeam)}\r\n        </div>\r\n      </div>\r\n      <div\r\n        // Keeping the Two Progress Bar Inline with anther\r\n        style={{\r\n          width: '100vw',\r\n          maxWidth: '100%',\r\n          overflow: 'hidden',\r\n          overflowX: 'auto',\r\n          whiteSpace: 'nowrap',\r\n        }}\r\n      >\r\n        <div\r\n          // Style for Boys Progress Bar\r\n          style={{\r\n            paddingRight: '3px',\r\n            width: '50%',\r\n            height: '100%',\r\n            display: 'inline-block',\r\n          }}\r\n        >\r\n          <ProgressBar\r\n            teams={boysTeam}\r\n            otherTeams={girlsTeam}\r\n            category={category}\r\n            backgroundColour={boysColour}\r\n            rightAlign={true}\r\n          />\r\n        </div>\r\n\r\n        <div\r\n          // Style for Girls Progress Bar\r\n          style={{\r\n            paddingLeft: '3px',\r\n            width: '50%',\r\n            height: '100%',\r\n            display: 'inline-block',\r\n          }}\r\n        >\r\n          <ProgressBar\r\n            teams={girlsTeam}\r\n            otherTeams={boysTeam}\r\n            category={category}\r\n            backgroundColour={girlsColour}\r\n            rightAlign={false}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","G:\\Personal Projects\\NHLScoreTracker\\nhl-score-tracker\\src\\features\\headtohead\\ProgressBar.tsx",[],"G:\\Personal Projects\\NHLScoreTracker\\nhl-score-tracker\\src\\features\\Home\\HomePage.tsx",[],"G:\\Personal Projects\\NHLScoreTracker\\nhl-score-tracker\\src\\features\\scores\\GameSchedule.tsx",[],"G:\\Personal Projects\\NHLScoreTracker\\nhl-score-tracker\\src\\features\\scores\\GamesByDate.tsx",["102","103"],"import React from 'react';\r\nimport { IGameStatus } from '../../app/models/gameStatus';\r\nimport { GameScore } from './GameScore';\r\n\r\ninterface IProps {\r\n  games: IGameStatus[];\r\n}\r\n\r\nexport const GamesByDate: React.FC<IProps> = ({ games }) => {\r\n  return <div>{games.map((game) => {})}</div>;\r\n};\r\n","G:\\Personal Projects\\NHLScoreTracker\\nhl-score-tracker\\src\\features\\scores\\GameScore.tsx",["104"],"import React from 'react';\r\nimport { IGames } from '../../app/models/games';\r\n\r\nexport const GameScore = () => {\r\n  return <div></div>;\r\n};\r\n",["105","106"],{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","severity":1,"message":"112","line":11,"column":10,"nodeType":"113","messageId":"114","endLine":11,"endColumn":21},{"ruleId":"111","severity":1,"message":"115","line":12,"column":10,"nodeType":"113","messageId":"114","endLine":12,"endColumn":16},{"ruleId":"116","severity":1,"message":"117","line":28,"column":44,"nodeType":"118","messageId":"119","endLine":28,"endColumn":46},{"ruleId":"120","severity":1,"message":"121","line":35,"column":1,"nodeType":"122","endLine":39,"endColumn":2},{"ruleId":"120","severity":1,"message":"121","line":11,"column":1,"nodeType":"122","endLine":20,"endColumn":2},{"ruleId":"111","severity":1,"message":"123","line":4,"column":3,"nodeType":"113","messageId":"114","endLine":4,"endColumn":10},{"ruleId":"111","severity":1,"message":"124","line":6,"column":3,"nodeType":"113","messageId":"114","endLine":6,"endColumn":9},{"ruleId":"116","severity":1,"message":"117","line":34,"column":22,"nodeType":"118","messageId":"119","endLine":34,"endColumn":24},{"ruleId":"125","severity":1,"message":"126","line":62,"column":6,"nodeType":"127","endLine":62,"endColumn":26,"suggestions":"128"},{"ruleId":"111","severity":1,"message":"129","line":3,"column":21,"nodeType":"113","messageId":"114","endLine":3,"endColumn":26},{"ruleId":"120","severity":1,"message":"121","line":4,"column":1,"nodeType":"122","endLine":4,"endColumn":18},{"ruleId":"116","severity":1,"message":"117","line":7,"column":20,"nodeType":"118","messageId":"119","endLine":7,"endColumn":22},{"ruleId":"116","severity":1,"message":"117","line":15,"column":22,"nodeType":"118","messageId":"119","endLine":15,"endColumn":24},{"ruleId":"116","severity":1,"message":"117","line":23,"column":22,"nodeType":"118","messageId":"119","endLine":23,"endColumn":24},{"ruleId":"116","severity":1,"message":"117","line":31,"column":22,"nodeType":"118","messageId":"119","endLine":31,"endColumn":24},{"ruleId":"116","severity":1,"message":"117","line":39,"column":22,"nodeType":"118","messageId":"119","endLine":39,"endColumn":24},{"ruleId":"111","severity":1,"message":"130","line":45,"column":9,"nodeType":"113","messageId":"114","endLine":45,"endColumn":31},{"ruleId":"116","severity":1,"message":"131","line":12,"column":25,"nodeType":"118","messageId":"132","endLine":12,"endColumn":27},{"ruleId":"111","severity":1,"message":"124","line":6,"column":10,"nodeType":"113","messageId":"114","endLine":6,"endColumn":16},{"ruleId":"111","severity":1,"message":"133","line":6,"column":18,"nodeType":"113","messageId":"114","endLine":6,"endColumn":25},{"ruleId":"111","severity":1,"message":"134","line":3,"column":10,"nodeType":"113","messageId":"114","endLine":3,"endColumn":19},{"ruleId":"116","severity":1,"message":"117","line":10,"column":33,"nodeType":"118","messageId":"119","endLine":10,"endColumn":35},{"ruleId":"111","severity":1,"message":"115","line":2,"column":10,"nodeType":"113","messageId":"114","endLine":2,"endColumn":16},{"ruleId":"107","replacedBy":"135"},{"ruleId":"109","replacedBy":"136"},"no-native-reassign",["137"],"no-negated-in-lhs",["138"],"@typescript-eslint/no-unused-vars","'IGameStatus' is defined but never used.","Identifier","unusedVar","'IGames' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'Divider' is defined but never used.","'Header' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'teamIds' and 'teams'. Either include them or remove the dependency array.","ArrayExpression",["139"],"'Input' is defined but never used.","'CalculateWinPercentage' is assigned a value but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","'Segment' is defined but never used.","'GameScore' is defined but never used.",["137"],["138"],"no-global-assign","no-unsafe-negation",{"desc":"140","fix":"141"},"Update the dependencies array to be: [startDate, endDate, teams, teamIds]",{"range":"142","text":"143"},[2008,2028],"[startDate, endDate, teams, teamIds]"]