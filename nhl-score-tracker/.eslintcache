[{"G:\\Personal Projects\\NHLScoreTracker\\nhl-score-tracker\\src\\index.tsx":"1","G:\\Personal Projects\\NHLScoreTracker\\nhl-score-tracker\\src\\reportWebVitals.ts":"2","G:\\Personal Projects\\NHLScoreTracker\\nhl-score-tracker\\src\\app\\layouts\\App.tsx":"3","G:\\Personal Projects\\NHLScoreTracker\\nhl-score-tracker\\src\\app\\api\\agent.ts":"4","G:\\Personal Projects\\NHLScoreTracker\\nhl-score-tracker\\src\\app\\api\\teams.ts":"5","G:\\Personal Projects\\NHLScoreTracker\\nhl-score-tracker\\src\\features\\teams\\teamDashboard.tsx":"6","G:\\Personal Projects\\NHLScoreTracker\\nhl-score-tracker\\src\\features\\nav\\NavBar.tsx":"7","G:\\Personal Projects\\NHLScoreTracker\\nhl-score-tracker\\src\\features\\headtohead\\HeadToHead.tsx":"8","G:\\Personal Projects\\NHLScoreTracker\\nhl-score-tracker\\src\\app\\shared\\calculateTotal.ts":"9","G:\\Personal Projects\\NHLScoreTracker\\nhl-score-tracker\\src\\app\\shared\\enums.ts":"10","G:\\Personal Projects\\NHLScoreTracker\\nhl-score-tracker\\src\\features\\teams\\TeamDetail.tsx":"11","G:\\Personal Projects\\NHLScoreTracker\\nhl-score-tracker\\src\\features\\headtohead\\HeadToHeadCategory.tsx":"12","G:\\Personal Projects\\NHLScoreTracker\\nhl-score-tracker\\src\\features\\headtohead\\ProgressBar.tsx":"13","G:\\Personal Projects\\NHLScoreTracker\\nhl-score-tracker\\src\\features\\Home\\HomePage.tsx":"14","G:\\Personal Projects\\NHLScoreTracker\\nhl-score-tracker\\src\\features\\scores\\GameSchedule.tsx":"15","G:\\Personal Projects\\NHLScoreTracker\\nhl-score-tracker\\src\\features\\scores\\GamesByDate.tsx":"16","G:\\Personal Projects\\NHLScoreTracker\\nhl-score-tracker\\src\\features\\scores\\GameScore.tsx":"17","G:\\Personal Projects\\NHLScoreTracker\\nhl-score-tracker\\src\\app\\stores\\datesStore.ts":"18","G:\\Personal Projects\\NHLScoreTracker\\nhl-score-tracker\\src\\app\\stores\\teamsStore.ts":"19","G:\\Personal Projects\\NHLScoreTracker\\nhl-score-tracker\\src\\app\\shared\\common.ts":"20","G:\\Personal Projects\\NHLScoreTracker\\nhl-score-tracker\\src\\app\\stores\\rootStore.ts":"21","G:\\Personal Projects\\NHLScoreTracker\\nhl-score-tracker\\src\\features\\scores\\TeamScore.tsx":"22"},{"size":769,"mtime":1614740050836,"results":"23","hashOfConfig":"24"},{"size":425,"mtime":499162500000,"results":"25","hashOfConfig":"24"},{"size":1688,"mtime":1614740050824,"results":"26","hashOfConfig":"24"},{"size":1406,"mtime":1614740050823,"results":"27","hashOfConfig":"24"},{"size":410,"mtime":1612555908287,"results":"28","hashOfConfig":"24"},{"size":3944,"mtime":1615047559955,"results":"29","hashOfConfig":"24"},{"size":823,"mtime":1614740050832,"results":"30","hashOfConfig":"24"},{"size":2023,"mtime":1614740050829,"results":"31","hashOfConfig":"24"},{"size":2141,"mtime":1612562021601,"results":"32","hashOfConfig":"24"},{"size":103,"mtime":1611805909495,"results":"33","hashOfConfig":"24"},{"size":1091,"mtime":1615048777992,"results":"34","hashOfConfig":"24"},{"size":2471,"mtime":1615051130779,"results":"35","hashOfConfig":"24"},{"size":2129,"mtime":1614740050831,"results":"36","hashOfConfig":"24"},{"size":299,"mtime":1614740050829,"results":"37","hashOfConfig":"24"},{"size":561,"mtime":1615056006764,"results":"38","hashOfConfig":"24"},{"size":459,"mtime":1615056110646,"results":"39","hashOfConfig":"24"},{"size":679,"mtime":1615056371324,"results":"40","hashOfConfig":"24"},{"size":707,"mtime":1615049079584,"results":"41","hashOfConfig":"24"},{"size":2865,"mtime":1615053368125,"results":"42","hashOfConfig":"24"},{"size":519,"mtime":1614740050825,"results":"43","hashOfConfig":"24"},{"size":439,"mtime":1615046752652,"results":"44","hashOfConfig":"24"},{"size":591,"mtime":1615056362173,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"5ruskn",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"48"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"48"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"G:\\Personal Projects\\NHLScoreTracker\\nhl-score-tracker\\src\\index.tsx",[],["94","95"],"G:\\Personal Projects\\NHLScoreTracker\\nhl-score-tracker\\src\\reportWebVitals.ts",[],"G:\\Personal Projects\\NHLScoreTracker\\nhl-score-tracker\\src\\app\\layouts\\App.tsx",[],"G:\\Personal Projects\\NHLScoreTracker\\nhl-score-tracker\\src\\app\\api\\agent.ts",["96"],"import axios, { AxiosResponse } from 'axios';\r\n\r\naxios.defaults.baseURL = 'https://statsapi.web.nhl.com/api/v1';\r\n\r\nconst responseBody = (response: AxiosResponse) => response.data;\r\n\r\nconst request = {\r\n    get: (url: string) => axios.get(url).then(responseBody),\r\n    post: (url: string, body: {}) => axios.post(url, body).then(responseBody),\r\n    put: (url: string, body: {}) => axios.put(url, body).then(responseBody),\r\n    delete: (url: string) => axios.delete(url).then(responseBody),\r\n}\r\n\r\nconst TeamDetail = (teamID: number) => {\r\n    return request.get(`/teams/${teamID.toString()}/stats`);\r\n}\r\n\r\nconst Teams = (teamIDs: number[]) => {\r\n    return request.get(`/teams/?teamId=${teamIDs.join()}&expand=team.stats`);\r\n}\r\n\r\nconst TeamGames = (teamID: number[], startDate: Date, endDate: Date) =>{\r\n\r\n    const startDateString: string = `&startDate=${startDate.toISOString().split('T')[0]}`;\r\n    const endDateString: string = `&endDate=${endDate.toISOString().split('T')[0]}`;\r\n    let teamIDString: string = '';\r\n\r\n    teamID.map((teamID: number, i: number) => {\r\n        return teamIDString += i === 0 ? `teamId=${teamID}` : `&teamId=${teamID}`;\r\n    })\r\n    console.log(`/schedule?${teamIDString}${startDateString}${endDateString}`);\r\n    return request.get(`/schedule?${teamIDString}${startDateString}${endDateString}`);\r\n}\r\n\r\nexport default {\r\n    TeamDetail,\r\n    Teams,\r\n    TeamGames,\r\n}\r\n\r\n\r\n","G:\\Personal Projects\\NHLScoreTracker\\nhl-score-tracker\\src\\app\\api\\teams.ts",["97"],"\r\nconst tamptaBayID: number = 14;\r\nconst coloradoID: number = 21;\r\nconst bostonID: number = 6;\r\nconst edmontonID: number = 22;\r\nconst carolinaID: number = 12;\r\nconst vegasID: number = 54;\r\nconst pittsburghID: number = 5;\r\nconst winnipegID: number = 52;\r\n\r\nexport default {\r\n    tamptaBayID,\r\n    coloradoID,\r\n    bostonID,\r\n    edmontonID,\r\n    carolinaID,\r\n    vegasID,\r\n    pittsburghID,\r\n    winnipegID\r\n}\r\n","G:\\Personal Projects\\NHLScoreTracker\\nhl-score-tracker\\src\\features\\teams\\teamDashboard.tsx",["98","99"],"G:\\Personal Projects\\NHLScoreTracker\\nhl-score-tracker\\src\\features\\nav\\NavBar.tsx",[],"G:\\Personal Projects\\NHLScoreTracker\\nhl-score-tracker\\src\\features\\headtohead\\HeadToHead.tsx",[],"G:\\Personal Projects\\NHLScoreTracker\\nhl-score-tracker\\src\\app\\shared\\calculateTotal.ts",["100","101","102","103","104","105","106"],"import { ITeam } from \"../models/team\";\r\nimport { teamCategory } from \"./enums\";\r\n\r\nexport default {}\r\nconst CalcuateTotalGamesPlayed = (teams: ITeam[]) => {\r\n  let total: number = 0;\r\n  teams.map((team) => {\r\n    total += team.gamesPlayed;\r\n  })\r\n  return total;\r\n  };\r\n  \r\n  const CalcuateTotalWins = (teams: ITeam[]) => {\r\n    let total: number = 0;\r\n    teams.map((team) => {\r\n    total += team.wins;\r\n  })\r\n  return total;\r\n  };\r\n  \r\n  const CalcuateTotalLoses = (teams: ITeam[]) => {\r\n    let total: number = 0;\r\n    teams.map((team) => {\r\n    total += team.losses;\r\n  })\r\n  return total;\r\n  };\r\n  \r\n  const CalcuateTotalOTLoses = (teams: ITeam[]) => {\r\n    let total: number = 0;\r\n    teams.map((team) => {\r\n    total += team.overTimeLoses;\r\n  })\r\n  return total;\r\n  };\r\n  \r\n  const CalcuateTotalPoints = (teams: ITeam[]) => {\r\n    let total: number = 0;\r\n    teams.map((team) => {\r\n    total += team.points;\r\n  })\r\n  return total;\r\n  };\r\n\r\n  const CalculateWinPercentage = (teams: ITeam[]) => {\r\n    const totalWins: number = CalcuateTotalWins(teams);\r\n    const totalGamesPlayed: number = CalcuateTotalWins(teams);\r\n    return totalWins/totalGamesPlayed;\r\n  }\r\n\r\n  const SelectCalculation = (category: teamCategory, teams: ITeam[]) =>{\r\n    let total: number = 0;\r\n    switch (category) {\r\n      case teamCategory.gamesPlayed: {\r\n        total = CalcuateTotalGamesPlayed(teams);\r\n        break;\r\n      }\r\n      case teamCategory.wins: {\r\n        total = CalcuateTotalWins(teams);\r\n        break;\r\n      }\r\n      case teamCategory.losses: {\r\n        total = CalcuateTotalLoses(teams);\r\n        break;\r\n      }\r\n      case teamCategory.overTimeLoses: {\r\n        total = CalcuateTotalOTLoses(teams);\r\n        break;\r\n      }\r\n      case teamCategory.points: {\r\n        total = CalcuateTotalPoints(teams);\r\n        break;\r\n      }\r\n      \r\n    }\r\n    return total;\r\n  }\r\n\r\n  export {\r\n    CalcuateTotalGamesPlayed as TotalGamesPlayed, \r\n    CalcuateTotalWins as TotalWins, \r\n    CalcuateTotalLoses as TotalLoses, \r\n    CalcuateTotalOTLoses as TotalOTLoses, \r\n    CalcuateTotalPoints as TotalPoints,\r\n    SelectCalculation\r\n  }\r\n\r\n\r\n    ","G:\\Personal Projects\\NHLScoreTracker\\nhl-score-tracker\\src\\app\\shared\\enums.ts",[],"G:\\Personal Projects\\NHLScoreTracker\\nhl-score-tracker\\src\\features\\teams\\TeamDetail.tsx",["107"],"G:\\Personal Projects\\NHLScoreTracker\\nhl-score-tracker\\src\\features\\headtohead\\HeadToHeadCategory.tsx",[],"G:\\Personal Projects\\NHLScoreTracker\\nhl-score-tracker\\src\\features\\headtohead\\ProgressBar.tsx",[],"G:\\Personal Projects\\NHLScoreTracker\\nhl-score-tracker\\src\\features\\Home\\HomePage.tsx",[],"G:\\Personal Projects\\NHLScoreTracker\\nhl-score-tracker\\src\\features\\scores\\GameSchedule.tsx",[],"G:\\Personal Projects\\NHLScoreTracker\\nhl-score-tracker\\src\\features\\scores\\GamesByDate.tsx",[],"G:\\Personal Projects\\NHLScoreTracker\\nhl-score-tracker\\src\\features\\scores\\GameScore.tsx",["108","109"],"G:\\Personal Projects\\NHLScoreTracker\\nhl-score-tracker\\src\\app\\stores\\datesStore.ts",[],"G:\\Personal Projects\\NHLScoreTracker\\nhl-score-tracker\\src\\app\\stores\\teamsStore.ts",["110"],"G:\\Personal Projects\\NHLScoreTracker\\nhl-score-tracker\\src\\app\\shared\\common.ts",[],"G:\\Personal Projects\\NHLScoreTracker\\nhl-score-tracker\\src\\app\\stores\\rootStore.ts",[],"G:\\Personal Projects\\NHLScoreTracker\\nhl-score-tracker\\src\\features\\scores\\TeamScore.tsx",["111"],{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","severity":1,"message":"117","line":35,"column":1,"nodeType":"118","endLine":39,"endColumn":2},{"ruleId":"116","severity":1,"message":"117","line":11,"column":1,"nodeType":"118","endLine":20,"endColumn":2},{"ruleId":"119","severity":1,"message":"120","line":27,"column":22,"nodeType":"121","messageId":"122","endLine":27,"endColumn":24},{"ruleId":"123","severity":1,"message":"124","line":37,"column":6,"nodeType":"125","endLine":37,"endColumn":48,"suggestions":"126"},{"ruleId":"116","severity":1,"message":"117","line":4,"column":1,"nodeType":"118","endLine":4,"endColumn":18},{"ruleId":"119","severity":1,"message":"120","line":7,"column":20,"nodeType":"121","messageId":"122","endLine":7,"endColumn":22},{"ruleId":"119","severity":1,"message":"120","line":15,"column":22,"nodeType":"121","messageId":"122","endLine":15,"endColumn":24},{"ruleId":"119","severity":1,"message":"120","line":23,"column":22,"nodeType":"121","messageId":"122","endLine":23,"endColumn":24},{"ruleId":"119","severity":1,"message":"120","line":31,"column":22,"nodeType":"121","messageId":"122","endLine":31,"endColumn":24},{"ruleId":"119","severity":1,"message":"120","line":39,"column":22,"nodeType":"121","messageId":"122","endLine":39,"endColumn":24},{"ruleId":"127","severity":1,"message":"128","line":45,"column":9,"nodeType":"129","messageId":"130","endLine":45,"endColumn":31},{"ruleId":"119","severity":1,"message":"131","line":13,"column":25,"nodeType":"121","messageId":"132","endLine":13,"endColumn":27},{"ruleId":"127","severity":1,"message":"133","line":11,"column":9,"nodeType":"129","messageId":"130","endLine":11,"endColumn":39},{"ruleId":"127","severity":1,"message":"134","line":12,"column":9,"nodeType":"129","messageId":"130","endLine":12,"endColumn":39},{"ruleId":"119","severity":1,"message":"120","line":43,"column":48,"nodeType":"121","messageId":"122","endLine":43,"endColumn":50},{"ruleId":"135","severity":1,"message":"136","line":12,"column":7,"nodeType":"137","endLine":15,"endColumn":9},"no-native-reassign",["138"],"no-negated-in-lhs",["139"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'teamIds', 'teamSchedule', 'teams', and 'teamsStore'. Either include them or remove the dependency array.","ArrayExpression",["140"],"@typescript-eslint/no-unused-vars","'CalculateWinPercentage' is assigned a value but never used.","Identifier","unusedVar","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","'homeStyle' is assigned a value but never used.","'awayStyle' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"141","fix":"142"},"Update the dependencies array to be: [datesStore.startDate, datesStore.endDate, teams, teamsStore, teamSchedule, teamIds]",{"range":"143","text":"144"},[1230,1272],"[datesStore.startDate, datesStore.endDate, teams, teamsStore, teamSchedule, teamIds]"]